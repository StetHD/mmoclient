package ui {		import flash.display.MovieClip;	import fl.text.TLFTextField;		import net.packet.InfoTile;	import net.packet.Resource;	import game.map.Tile;	import game.map.Map;	import game.Item;	import game.entity.Improvement;	import flash.events.MouseEvent;	import game.Claim;	import flash.geom.Rectangle;			public class LandDetailCard extends MovieClip {				public var tileIndex:int;		public var tileType:int;		public var resources:Array;				public var closeButton:CloseButton;		public var typeText:TLFTextField;		public var empireNameText:TLFTextField;		public var coordinatesText:TLFTextField;				public var statsText:TLFTextField;		public var upgradesText:TLFTextField;		public var resourcesText:TLFTextField;				public var statsPanel:LandDetailStatsPanel;				private var upgradesPanel:MovieClip;		private var resourcesPanel:MovieClip;				public function LandDetailCard() 		{			resources = new Array();							}				public function init() : void		{			statsText.addEventListener(MouseEvent.CLICK, statsClick);			upgradesText.addEventListener(MouseEvent.CLICK, upgradesClick);			resourcesText.addEventListener(MouseEvent.CLICK, resourcesClick);									upgradesPanel = new MovieClip();			resourcesPanel = new MovieClip();			resourcesPanel.x = 6;			resourcesPanel.y = 145;			//resourcesPanel.width = 100;			//resourcesPanel.height = 100;			resourcesPanel.scrollRect = new Rectangle(0, 0, 260, 243);						addChild(upgradesPanel);			addChild(resourcesPanel);					}				public function showPanel() : void		{			this.parent.setChildIndex(this, this.parent.numChildren - 1);			resourcesPanel.visible = false;		}				public function setInfo(infoTile:InfoTile) : void		{			var coordX:int = Map.convertCoordX(infoTile.tileIndex);			var coordY:int = Map.convertCoordY(infoTile.tileIndex);			var claim:Claim = new Claim();						claim.id = infoTile.claim.id;			claim.tileIndex = infoTile.claim.tileIndex;			claim.cityId = infoTile.claim.cityId;			claim.state = infoTile.claim.state;			claim.createdTime = infoTile.claim.createdTime;						typeText.text = Tile.GetTileName(infoTile.tileType);			coordinatesText.text = "(" + coordX.toString() + ", " + coordY.toString() + ")";																					statsPanel.xCoord = coordX;			statsPanel.yCoord = coordY;			statsPanel.showPanel();			statsPanel.setClaim(claim);						for(var i = 0; i < infoTile.resources.length; i++)			{				var landDetailResource:LandDetailResource = new LandDetailResource();				var resource:Resource = Resource(infoTile.resources[i]);				var resourceItem:Item = new Item();								resourceItem.id = -1;				resourceItem.type = resource.type;				resourceItem.ownerType = -1;				resourceItem.ownerId = -1;									landDetailResource.nameText.text = stripResourceName(resourceItem.getName());				landDetailResource.categoryText.text = resourceItem.getCategory();				landDetailResource.quantityText.text = UtilUI.FormatNum(resource.total);				landDetailResource.regenText.text = "(" + UtilUI.FormatNum(resource.regen_rate) + ")";				landDetailResource.x = 4;				landDetailResource.y = 0 + i * (landDetailResource.height + 3);																			resources.push(landDetailResource);																			resourcesPanel.addChild(landDetailResource);			}		}				private function stripResourceName(resourceName:String) : String		{			//return resourceName;			var regExp:RegExp = /resource/i;			return resourceName.replace(regExp, "");		}				private function statsClick(e:MouseEvent) : void		{						statsPanel.visible = true;			resourcesPanel.visible = false;					}				private function upgradesClick(e:MouseEvent) : void		{					}				private function resourcesClick(e:MouseEvent) : void		{			statsPanel.visible = false;									resourcesPanel.visible = true;		}					}	}