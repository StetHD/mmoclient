package ui {		import flash.display.MovieClip;	import fl.text.TLFTextField;	import flash.events.MouseEvent;	import game.entity.City;	import game.Contract;		public class BaseContract extends MovieClip 	{		public static var MAX_PER_PAGE:int = 5;				public static var ENTRY_X_START:int = 4;		public static var ENTRY_Y_START:int = 2;						public static var SELECTED_ENTRY_X:int = 6;		public static var SELECTED_ENTRY_Y:int = 102;						public var city:City;				public var selectSource:MovieClip;		public var structureEntry:StructureEntry;		public var selectBlock:MovieClip;		public var closeButton:CloseButton;				protected var entries:Array;		protected var selectedEntry:ContractEntry;				protected var currentPage:int;		protected var totalPages:int;						public function BaseContract() 		{			entries = new Array();						addEventListener(MouseEvent.MOUSE_DOWN, mouseDown);				addEventListener(MouseEvent.MOUSE_UP, mouseUp);									closeButton.addEventListener(MouseEvent.CLICK, closeButtonClick);		}				public function showPanel() : void		{			this.parent.setChildIndex(this, this.parent.numChildren - 1);							this.visible = true;			selectSource.visible = true;				selectBlock.visible = true;			structureEntry.visible = false;								removeEntries();		}						protected function mouseClick(e:MouseEvent) : void		{			var entry:ContractEntry = ContractEntry(e.target);						entry.x = SELECTED_ENTRY_X;			entry.y = SELECTED_ENTRY_Y;			entry.removeMouseEvents();			entry.hideActivate();						addChild(entry);						selectBlock.visible = false;			selectedEntry = entry;		}						protected function removeEntries() : void		{					}				protected function mouseDown(e:MouseEvent) : void		{				e.stopImmediatePropagation();						this.parent.setChildIndex(this, this.parent.numChildren - 1);			startDrag();					}						protected function mouseUp(e:MouseEvent) : void		{					e.stopImmediatePropagation();			stopDrag();		}								protected function closeButtonClick(e:MouseEvent) : void		{			this.visible = false;		}					protected function setTotalPages(numEntries:int) : void		{			totalPages = numEntries / MAX_PER_PAGE;						if((numEntries % MAX_PER_PAGE) != 0);			{				totalPages++;			}			selectBlock.pagination.totalPages.text = totalPages.toString();		}				protected function setCurrentPage() : void		{			var currentPageText:int = currentPage + 1;			selectBlock.pagination.currentPage.text = currentPageText.toString();		}					}}