package ui {		import flash.display.MovieClip;	import fl.text.TLFTextField;	import flash.events.MouseEvent;	import game.unit.Unit;	import game.Item;	import stats.UnitTemplate;	import stats.UnitRecipe;	import game.Game;	import game.Kingdom;	import game.KingdomManager;	import game.Population;		public class UnitDetail extends MovieClip 	{		public var unitDetailStats:UnitDetailStats;		public var gear:UnitDetailGear;		public var inventory:UnitDetailInventory;				public var unit:Unit;				public var unitNameText:TLFTextField;		public var unitTypeText:TLFTextField;				public var statsText:TLFTextField;		public var gearText:TLFTextField;		public var abilitiesText:TLFTextField;		public var inventoryText:TLFTextField;				public var closeButton:CloseButton;				private var unitTemplate:UnitTemplate;		private var unitRecipe:UnitRecipe;				public function UnitDetail() 		{					}				public function init(): void		{			this.visible = false;						statsText.addEventListener(MouseEvent.CLICK, statsClick);			gearText.addEventListener(MouseEvent.CLICK, gearClick);			inventoryText.addEventListener(MouseEvent.CLICK, inventoryClick);						closeButton.addEventListener(MouseEvent.CLICK, closeButtonClick);		}				public function setUnit(unit:Unit): void		{			this.unit = unit;		}				public function showPanel() : void		{			this.parent.setChildIndex(this, this.parent.numChildren - 1);				this.visible = true;						setStats();			setGear();			setInventory();		}				private function setStats() : void		{			var kingdom:Kingdom = KingdomManager.INSTANCE.getKingdom(Game.INSTANCE.player.id);			unitRecipe = kingdom.getUnitRecipe(unit.recipeId);						trace("unitRecipe TemplateId: " + unitRecipe.templateId);						unitTemplate = Stats.INSTANCE.getUnitTemplate(unitRecipe.templateId);						trace("unitTemplate:  " + unitTemplate);						unitNameText.text = unitRecipe.unitName;			unitTypeText.text = unitTemplate.name;						unitDetailStats.atk.text = unitTemplate.atk.toString();			unitDetailStats.def.text = unitTemplate.def.toString();			unitDetailStats.range.text = unitTemplate.range.toString();			unitDetailStats.acc.text = unitTemplate.acc.toString();			unitDetailStats.eva.text = unitTemplate.eva.toString();			unitDetailStats.speed.text = unitTemplate.speed.toString();			unitDetailStats.movement.text = unitTemplate.movement.toString();									setUnitAmountIcon();		}				private function setGear() : void		{					}				private function setInventory() : void		{			for(var i:int = 0; i < unit.items.length; i++)			{				var item:Item = Item(unit.items[i]);								var iconItem:IconItem = new IconItem();				iconItem.setItem(item);			}		}				private function setUnitAmountIcon() : void		{			var race:int = getRace();			var raceName:String = Population.getRaceName(race);									var raceIcon:MovieClip = Population.createRaceIcon(race);						raceIcon.x = 1;			raceIcon.y = 1;						unitDetailStats.unitAmountIcon.amountRaceText.text = unit.size + " " + raceName;			unitDetailStats.unitAmountIcon.casteText.text = "";			unitDetailStats.unitAmountIcon.addChild(raceIcon);						unitDetailStats.unitAmountIcon.removeButton.visible = false;		}				private function getRace() : int		{			if(unitTemplate.name.indexOf("Human") != -1)			{				return Population.RACE_HUMAN;			}			else if(unitTemplate.name.indexOf("Dwarven") != -1)			{				return Population.RACE_DWARF;			}			else if(unitTemplate.name.indexOf("Elven") != -1)			{				return Population.RACE_ELF;			}			else if(unitTemplate.name.indexOf("Goblin") != -1)			{				return Population.RACE_GOBLIN;			}									return -1;		}				private function statsClick(e:MouseEvent) : void		{			unitDetailStats.visible = true;			gear.visible = false;			inventory.visible = false;		}				private function gearClick(e:MouseEvent) : void		{			unitDetailStats.visible = false;			gear.visible = true;			inventory.visible = false;		}				private function inventoryClick(e:MouseEvent) : void		{			unitDetailStats.visible = false;			gear.visible = false;			inventory.visible = true;		}				private function closeButtonClick(e:MouseEvent) : void		{			this.visible = false;		}			}	}