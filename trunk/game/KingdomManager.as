package game{	import flash.utils.Dictionary;	import game.entity.City;	import game.perception.PerceptionManager;	import game.Kingdom;	import net.packet.InfoKingdom;	import game.entity.Entity;		public class KingdomManager	{		public static var INSTANCE:KingdomManager = new KingdomManager();					private var kingdoms:Array;				public function KingdomManager()		{			kingdoms = new Array();		}				public function getKingdomByCity(cityId:int) : Kingdom		{			var entity:Entity = PerceptionManager.INSTANCE.getEntity(cityId);						if(entity != null)			{				return KingdomManager.INSTANCE.getKingdom(entity.playerId);			}						return null;		}				public function getKingdom(playerId:int) : Kingdom		{			trace("KingdomManager: " + kingdoms.length);			for(var i:int = 0; i < kingdoms.length; i++)			{				var kingdom:Kingdom = Kingdom(kingdoms[i]);								if(kingdom.playerId == playerId)				{					return kingdom;				}			}						return null;		}				public function addKingdom(playerId:int, infoKingdom:InfoKingdom) : void		{			var kingdom:Kingdom = new Kingdom();						kingdom.id = infoKingdom.id;			kingdom.playerId = playerId;			kingdom.name = infoKingdom.name;			kingdom.gold = infoKingdom.gold;						removePreviousKingdom(kingdom);						kingdoms.push(kingdom);		}				private function removePreviousKingdom(kingdom:Kingdom) : void		{			for(var i:int = 0; i < kingdoms.length; i++)			{				var previousKingdom:Kingdom = Kingdom(kingdoms[i]);								if(kingdom.id = previousKingdom.id)				{					kingdoms.splice(i, 1);					break;				}			}		}	}}