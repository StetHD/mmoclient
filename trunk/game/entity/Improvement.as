package game.entity{	import flash.display.Sprite;	import flash.display.Bitmap;	import flash.display.BitmapData;	import flash.events.Event;	import flash.events.MouseEvent;		import game.Game;	import game.map.Tile;	import game.Item;		import ui.IconEntity;			import game.perception.PerceptionManager;	import flash.utils.Dictionary;	import stats.ImprovementStat;		public class Improvement extends Entity 	{		public static var TYPE:int = Entity.IMPROVEMENT;		public static var FARM:int = 1;				public static var TRAPPER:int = 2;		public static var LUMBERMILL:int = 3;		public static var MINE:int = 4;		public static var QUARRY:int = 5;				public static var FARM_CATEGORY = "Farm";		public static var TRAPPER_CATEGORY = "Trapper";		public static var LUMBERMILL_CATEGORY = "Lumbermill";		public static var MINE_CATEGORY = "Mine";		public static var QUARRY_CATEGORY = "Quarry";						public static var onDoubleClick:String = "onImprovementDoubleClick";						public var icon:IconEntity = null;				private var improvementStat:ImprovementStat;		public function Improvement() : void		{						}				public static function getImprovementFromPos(xCoord:int, yCoord:int) : Improvement		{			var entities:Dictionary = PerceptionManager.INSTANCE.getEntities();						for (var entityId:Object in entities)			{						var entity:Entity = entities[entityId];										if(entity.type == Entity.IMPROVEMENT)				{					if(entity.gameX == xCoord && 					   entity.gameY == yCoord)					{						return Improvement(entity);					}				}			}						return null;		}				public static function getNameStatic(type:int) : String		{			var stat:ImprovementStat = Stats.INSTANCE.getImprovement(type);						return stat.name;		}				public static function getCost(type:int) : int		{			return 100;		}						override public function getName() : String		{			return improvementStat.name;		}							override public function getImage() : BitmapData		{			trace("Improvement: " + subType);			var stat:ImprovementStat = Stats.INSTANCE.getImprovement(subType);			var imageId:int = stat.image48;						trace("Improvement: " + imageId);						return Images.INSTANCE.getImage(imageId);		}				override public function initialize() : void		{											this.image = new Bitmap(getImage());			this.addChild(this.image);							improvementStat = Stats.INSTANCE.getImprovement(this.subType);		}							override protected function mouseClick(e:Event):void		{			var pEvent:ParamEvent = new ParamEvent(Tile.onClick);			pEvent.params = tile;			Game.INSTANCE.dispatchEvent(pEvent);		}		override protected function mouseDoubleClick(e:Event):void		{			trace("Improvement - mouseDoubleClick");			var pEvent:ParamEvent = new ParamEvent(onDoubleClick);			pEvent.params = this;			Game.INSTANCE.dispatchEvent(pEvent);		}								/*public function getAvailableResource() : Array		{			var resources:Array = new Array();						switch(this.subType)			{				case FARM:					resources.push("Plants");					return resources;			}						resources.push("None");			return resources;		}*/				public function getProductionCost() : int		{			return improvementStat.productionCost;		}			}	}